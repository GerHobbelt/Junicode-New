{
glyphname = "haeglH-runic.rtl";
layers = (
{
layerId = master01;
shapes = (
{
closed = 1;
nodes = (
(127,0,l),
(127,102,l),
(435,341,l),
(435,0,l),
(510,0,l),
(510,725,l),
(435,725,l),
(435,616,l),
(127,377,l),
(127,725,l),
(53,725,l),
(53,0,l)
);
},
{
closed = 1;
nodes = (
(127,289,l),
(435,528,l),
(435,429,l),
(127,190,l)
);
}
);
width = 562;
},
{
layerId = "75918100-ED89-42A8-B0FE-888EB9C86810";
shapes = (
{
closed = 1;
nodes = (
(163,0,l),
(163,69,l),
(404,257,l),
(404,0,l),
(516,0,l),
(516,726,l),
(404,726,l),
(404,643,l),
(163,456,l),
(163,726,l),
(51,726,l),
(51,0,l)
);
},
{
closed = 1;
nodes = (
(163,330,l),
(404,518,l),
(404,382,l),
(163,195,l)
);
}
);
width = 568;
},
{
layerId = "6ABD9449-5E80-4451-809E-12ADEB9E9AB4";
shapes = (
{
closed = 1;
nodes = (
(116,0,l),
(116,112,l),
(446,370,l),
(446,0,l),
(508,0,l),
(508,725,l),
(446,725,l),
(446,607,l),
(116,351,l),
(116,725,l),
(54,725,l),
(54,0,l)
);
},
{
closed = 1;
nodes = (
(116,275,l),
(446,532,l),
(446,445,l),
(116,189,l)
);
}
);
width = 560;
},
{
layerId = "70B83247-6FA0-4662-9656-C86DD2A17D3B";
shapes = (
{
closed = 1;
nodes = (
(113,0,l),
(113,92,l),
(339,316,l),
(339,0,l),
(410,0,l),
(410,726,l),
(339,726,l),
(339,624,l),
(113,401,l),
(113,726,l),
(42,726,l),
(42,0,l)
);
},
{
closed = 1;
nodes = (
(113,301,l),
(339,525,l),
(339,415,l),
(113,192,l)
);
}
);
width = 452;
},
{
layerId = "9E6FDE2E-55A6-44A9-9556-F1822294BF26";
shapes = (
{
closed = 1;
nodes = (
(142,0,l),
(142,111,l),
(531,367,l),
(531,0,l),
(609,0,l),
(609,725,l),
(531,725,l),
(531,608,l),
(142,353,l),
(142,725,l),
(63,725,l),
(63,0,l)
);
},
{
closed = 1;
nodes = (
(142,277,l),
(531,531,l),
(531,443,l),
(142,189,l)
);
}
);
width = 671;
},
{
layerId = "00F4936D-6309-4DEC-83B3-42806ED1A477";
shapes = (
{
closed = 1;
nodes = (
(127,0,l),
(127,102,l),
(435,341,l),
(435,0,l),
(510,0,l),
(510,725,l),
(435,725,l),
(435,616,l),
(127,377,l),
(127,725,l),
(53,725,l),
(53,0,l)
);
},
{
closed = 1;
nodes = (
(127,289,l),
(435,528,l),
(435,429,l),
(127,190,l)
);
}
);
width = 562;
}
);
metricLeft = "=|haeglH-runic";
metricRight = "=|haeglH-runic";
userData = {
KernOnSpecialSpacing = {
L = NoKerning;
R = NoKerning;
};
};
}
